{"version":3,"sources":["logo.svg","components/ReactSwitch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SwitchExample","state","checked","handleChange","bind","this","props","my_socket","connected","alert","close","open","setState","onChange","Component","socket","io","path","find_ticker","nombre","lista_stocks","stock","company_name","ticker","find_buy_volume","dicc","isNaN","find_volume_exchange","listed_companies","buy_stocks","stocks","total","company","find_price","find_price_2","emit","App","useState","setStock","exchangesNames","setExchangesNames","buyStocks","setBuyStocks","sellStocks","setSellStocks","priceStocks","setPriceStocks","lastpriceStocks","setlastPriceStocks","minpriceStocks","setminPriceStocks","maxpriceStocks","setmaxPriceStocks","dataStocks","setdataStocks","listExchangesNames","buy_stocks_info","sell_stocks_info","price_stocks_info","last_price_stocks_info","min_price_stocks_info","max_price_stocks_info","data_info","useEffect","once","i","push","on","volume","value","aux","Date","time","toLocaleString","d","t","getTime","min","max","setValue","interval","setInterval","clearInterval","className","class","scope","map","amu","name","country","length","volumen_total_mercado","mi_volumen_total","exchange","find_market_share","block","console","log","key","Math","random","width","height","data","redraw","dataKey","label","position","angle","stroke","strokeDasharray","type","activeDot","r","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,sPCgC5BC,E,kDA3Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,SAAS,GACxB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAHR,E,yDAMDF,GACPG,KAAKC,MAAMC,UAAUC,WACvBC,MAAM,mBACNJ,KAAKC,MAAMC,UAAUG,UAErBD,MAAM,kBACNJ,KAAKC,MAAMC,UAAUI,QAEvBN,KAAKO,SAAS,CAAEV,c,+BAIhB,OACE,+BACE,4DACA,kBAAC,IAAD,CAAQW,SAAUR,KAAKF,aAAcD,QAASG,KAAKJ,MAAMC,e,GAtBrCY,a,QCctBC,EAASC,IAAG,oCAAqC,CACrDC,KAAM,YAMR,SAASC,EAAYC,EAAQC,GAC3B,IAAK,IAAIC,KAASD,EAChB,GAAID,GAAUC,EAAaC,GAAOC,aAChC,OAAOF,EAAaC,GAAOE,OAE/B,MAAO,YAGT,SAASC,EAAgBD,EAAQE,GAC/B,OAAIC,MAAMD,EAAKF,IACN,EAEAE,EAAKF,GAGhB,SAASI,EAAqBC,EAAkBC,EAAYC,GAC1D,IACIC,EAAQ,EACZ,IAAK,IAAIC,KAAWJ,EAElBG,GAASP,EADAN,EAAYU,EAAiBI,GAAUF,GACfD,GAGnC,OAAOE,EAmCT,SAASE,EAAWV,EAAQE,GAC1B,OAAIC,MAAMD,EAAKF,IACN,EAEAE,EAAKF,GAGhB,SAASW,EAAaX,EAAQE,GAC5B,OAAIC,MAAMD,EAAKF,IACN,EAEAE,EAAKF,GAxEhBR,EAAOoB,KAAK,aACZpB,EAAOoB,KAAK,UAuVGC,MA1Qf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNP,EADM,KACEQ,EADF,OAE+BD,mBAAS,IAFxC,mBAENE,EAFM,KAEUC,EAFV,OAIqBH,mBAAS,IAJ9B,mBAINI,EAJM,KAIKC,EAJL,OAMuBL,mBAAS,IANhC,mBAMNM,EANM,KAMMC,EANN,OAQyBP,mBAAS,IARlC,mBAQNQ,EARM,KAQOC,EARP,OAUiCT,mBAAS,IAV1C,mBAUNU,EAVM,KAUWC,EAVX,OAY+BX,mBAAS,IAZxC,mBAYNY,EAZM,KAYUC,EAZV,OAa+Bb,mBAAS,IAbxC,mBAaNc,EAbM,KAaUC,EAbV,OAeuBf,mBAAS,IAfhC,mBAeNgB,EAfM,KAeMC,EAfN,KAiBTC,EAAqB,GACrBC,EAAkB,GAClBC,EAAmB,GACnBC,EAAoB,GACpBC,EAAyB,GAEzBC,EAAwB,GACxBC,EAAwB,GACxBC,GAAY,GAIhBC,qBAAU,WACRhD,EAAOiD,KAAK,UAAU,SAAClC,GACrBQ,EAAS,YAAIR,OAGff,EAAOiD,KAAK,aAAa,SAACzB,GACxB,IAAK,IAAI0B,KAAK1B,EACZgB,EAAmBW,KAAK3B,EAAe0B,IAEzCzB,EAAkB,GAAD,OAAKe,OAIxBxC,EAAOoD,GAAG,OAAO,SAAC1B,GACZf,MAAM8B,EAAgBf,EAAUlB,UAClCiC,EAAgBf,EAAUlB,QAAUkB,EAAU2B,OAC9C1B,EAAac,KAEbA,EAAgBf,EAAUlB,SAAWkB,EAAU2B,OAC/C1B,EAAac,OAIjBzC,EAAOoD,GAAG,QAAQ,SAACxB,GACbjB,MAAM+B,EAAiBd,EAAWpB,UACpCkC,EAAiBd,EAAWpB,QAAUoB,EAAWyB,OACjDxB,EAAca,KAEdA,EAAiBd,EAAWpB,SAAWoB,EAAWyB,OAClDxB,EAAca,OAKlB1C,EAAOoD,GAAG,UAAU,SAACtB,GACnB,GAAInB,MAAMgC,EAAkBb,EAAYtB,SAAU,CAChDmC,EAAkBb,EAAYtB,QAAUsB,EAAYwB,MACpDvB,EAAeY,GAEfI,GAAUjB,EAAYtB,QAAU,IAC5B+C,EAAM,IAEP,KAAW,IAAIC,KAAK1B,EAAY2B,MAAMC,eAAe,SACxDH,EAAG,MAAYzB,EAAYwB,MAC3BP,GAAUjB,EAAYtB,QAAQ2C,KAAKI,GACnChB,EAAcQ,IAEdH,EAAuBd,EAAYtB,QAAUsB,EAAYwB,MACzDrB,EAAmBW,GAEnBC,EAAsBf,EAAYtB,QAAUsB,EAAYwB,MACxDR,EAAsBhB,EAAYtB,QAAUsB,EAAYwB,MACxDnB,EAAkBU,GAClBR,EAAkBS,OACb,CACLF,EAAuBd,EAAYtB,QACjCmC,EAAkBb,EAAYtB,QAChCyB,EAAmBW,GAEnBD,EAAkBb,EAAYtB,QAAUsB,EAAYwB,MACpDvB,EAAeY,GAEf,IAAIY,EAAM,GAENI,EAAI,IAAIH,KAAK1B,EAAY2B,MACzBG,EAAI,IAAIJ,KAAKG,EAAEE,UAAY,KAAMH,eAAe,SACpDH,EAAG,KAAWK,EAEdL,EAAG,MAAYzB,EAAYwB,MAC3BP,GAAUjB,EAAYtB,QAAQ2C,KAAKI,GACnChB,EAAcQ,IAEd,IAAIe,EAAMjB,EAAsBf,EAAYtB,QACxCuD,EAAMjB,EAAsBhB,EAAYtB,QACxCsB,EAAYwB,MAAQS,IACtBjB,EAAsBhB,EAAYtB,QAAUsB,EAAYwB,OAGtDxB,EAAYwB,MAAQQ,IACtBjB,EAAsBf,EAAYtB,QAAUsB,EAAYwB,OAE1DnB,EAAkBU,GAClBR,EAAkBS,SAGrB,IAlHU,OAoHaxB,mBAAS,GApHtB,qBAoHC0C,IApHD,aA4Hb,OAPAhB,qBAAU,WACR,IAAMiB,EAAWC,aAAY,WAC3BF,IAAS,SAACV,GAAD,QAAaA,OACrB,KACH,OAAO,kBAAMa,cAAcF,MAC1B,IAGD,yBAAKG,UAAU,OACb,6BACE,8DACA,6BACE,kBAAC,EAAD,CAAe5E,UAAWQ,KAE5B,gCACE,2BAAOqE,MAAM,SACX,+BACE,4BACE,wBAAIC,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,qBACA,wBAAIA,MAAM,OAAV,iCAGH9C,EAAe+C,KAAI,SAACC,GAAD,OAClB,4BACE,wBAAIF,MAAM,OAAOE,EAAIC,MACrB,wBAAIH,MAAM,OAAOE,EAAIE,SAErB,wBAAIJ,MAAM,OACP1D,EACC4D,EAAI3D,iBACJa,EACAX,GACC,KAGL,wBAAIuD,MAAM,OACP1D,EACC4D,EAAI3D,iBACJe,EACAb,GACC,KAGL,wBAAIuD,MAAM,OACP1D,EACC4D,EAAI3D,iBACJa,EACAX,GAEAH,EACE4D,EAAI3D,iBACJe,EACAb,GACC,KAGP,wBAAIuD,MAAM,OAAOE,EAAI3D,iBAAiB8D,QACtC,wBAAIL,MAAM,OApO1B,SAA2B9C,EAAgBgD,EAAK9C,EAAWE,EAAYb,GACrE,IAAI6D,EAAwB,EACxBC,EAAmB,EAEvB,IAAK,IAAIC,KAAYtD,EACnBoD,GAAyBhE,EACvBY,EAAesD,GAAUjE,iBACzBa,EACAX,GAEF6D,GAAyBhE,EACvBY,EAAesD,GAAUjE,iBACzBe,EACAb,GAgBJ,OAZA8D,GAAoBjE,EAClB4D,EAAI3D,iBACJa,EACAX,IAEF8D,GAAoBjE,EAClB4D,EAAI3D,iBACJe,EACAb,IAG6B6D,EAyMdG,CACCvD,EACAgD,EACA9C,EACAE,EACAb,UAOZ,gCACE,2BAAOsD,MAAM,SACX,+BACE,4BACE,wBAAIC,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,0BACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,iBACA,wBAAIA,MAAM,OAAV,iCAGHvD,EAAOwD,KAAI,SAACS,GAAD,OACV,4BACE,wBAAIV,MAAM,OAAOU,EAAMzE,cACvB,wBAAI+D,MAAM,OAAOU,EAAMN,SACvB,wBAAIJ,MAAM,OACP7D,EAAgBuE,EAAMxE,OAAQkB,GAC7BjB,EAAgBuE,EAAMxE,OAAQoB,IAElC,wBAAI0C,MAAM,OACPnD,EAAa6D,EAAMxE,OAAQ4B,GAAiB,KAE/C,wBAAIkC,MAAM,OACPnD,EAAa6D,EAAMxE,OAAQ0B,GAAiB,KAE/C,wBAAIoC,MAAM,OAAOpD,EAAW8D,EAAMxE,OAAQsB,GAA1C,KACA,wBAAIwC,MAAM,QACLpD,EAAW8D,EAAMxE,OAAQsB,GAC1BZ,EAAW8D,EAAMxE,OAAQwB,IACzBd,EAAW8D,EAAMxE,OAAQsB,GACzB,IAAK,KAGT,wBAAIwC,MAAM,OACPW,QAAQC,IAAI5C,EAAW0C,EAAMxE,SAC9B,kBAAC,IAAD,CACE2E,IAAKC,KAAKC,SACVC,MAAO,IACPC,OAAQ,IACRC,KAAMlD,EAAW0C,EAAMxE,QACvBiF,QAAQ,GAER,kBAAC,IAAD,CACEC,QAAQ,OACRC,MAAO,CAAErC,MAAO,OAAQsC,SAAU,kBAEpC,kBAAC,IAAD,CACED,MAAO,CACLrC,MAAO,OACPuC,OAAQ,GACRD,SAAU,gBAGd,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAeE,OAAO,OAAOC,gBAAgB,QAC7C,kBAAC,IAAD,CACEC,KAAK,WACLN,QAAQ,QACRI,OAAO,UACPG,UAAW,CAAEC,EAAG,gBCrVlBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnC,QAAQmC,MAAMA,EAAMC,c","file":"static/js/main.9e01ce95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\n//codigo sacado de https://www.npmjs.com/package/react-switch\r\nclass SwitchExample extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { checked: false };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(checked) {\r\n    if (this.props.my_socket.connected) {\r\n      alert(\"Socket Cerrado \");\r\n      this.props.my_socket.close();\r\n    } else {\r\n      alert(\"Socket Abierto\");\r\n      this.props.my_socket.open();\r\n    }\r\n    this.setState({ checked });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <label>\r\n        <span>Apaga o Prende el socket!!</span>\r\n        <Switch onChange={this.handleChange} checked={this.state.checked} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SwitchExample;\r\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport io from \"socket.io-client\";\nimport SwitchExample from \"./components/ReactSwitch.js\";\n\nimport {\n  CartesianGrid,\n  BarChart,\n  Bar,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n} from \"recharts\";\n\nconst socket = io(\"https://le-18262636.bitzonte.com/\", {\n  path: \"/stocks\",\n});\n\nsocket.emit(\"EXCHANGES\");\nsocket.emit(\"STOCKS\");\n\nfunction find_ticker(nombre, lista_stocks) {\n  for (var stock in lista_stocks) {\n    if (nombre == lista_stocks[stock].company_name)\n      return lista_stocks[stock].ticker;\n  }\n  return \"Not found\";\n}\n\nfunction find_buy_volume(ticker, dicc) {\n  if (isNaN(dicc[ticker])) {\n    return 0;\n  } else {\n    return dicc[ticker];\n  }\n}\nfunction find_volume_exchange(listed_companies, buy_stocks, stocks) {\n  var ticker;\n  var total = 0;\n  for (var company in listed_companies) {\n    ticker = find_ticker(listed_companies[company], stocks);\n    total += find_buy_volume(ticker, buy_stocks);\n  }\n\n  return total;\n}\n\nfunction find_market_share(exchangesNames, amu, buyStocks, sellStocks, stocks) {\n  var volumen_total_mercado = 0;\n  var mi_volumen_total = 0;\n\n  for (var exchange in exchangesNames) {\n    volumen_total_mercado += find_volume_exchange(\n      exchangesNames[exchange].listed_companies,\n      buyStocks,\n      stocks\n    );\n    volumen_total_mercado += find_volume_exchange(\n      exchangesNames[exchange].listed_companies,\n      sellStocks,\n      stocks\n    );\n  }\n\n  mi_volumen_total += find_volume_exchange(\n    amu.listed_companies,\n    buyStocks,\n    stocks\n  );\n  mi_volumen_total += find_volume_exchange(\n    amu.listed_companies,\n    sellStocks,\n    stocks\n  );\n\n  var share = mi_volumen_total / volumen_total_mercado;\n  return share;\n}\n\nfunction find_price(ticker, dicc) {\n  if (isNaN(dicc[ticker])) {\n    return 0;\n  } else {\n    return dicc[ticker];\n  }\n}\nfunction find_price_2(ticker, dicc) {\n  if (isNaN(dicc[ticker])) {\n    return 0;\n  } else {\n    return dicc[ticker];\n  }\n}\n\nfunction render_chart() {}\n\nfunction App() {\n  const [stocks, setStock] = useState([]);\n  const [exchangesNames, setExchangesNames] = useState([]);\n\n  const [buyStocks, setBuyStocks] = useState([]);\n\n  const [sellStocks, setSellStocks] = useState([]);\n\n  const [priceStocks, setPriceStocks] = useState([]);\n\n  const [lastpriceStocks, setlastPriceStocks] = useState([]);\n\n  const [minpriceStocks, setminPriceStocks] = useState([]);\n  const [maxpriceStocks, setmaxPriceStocks] = useState([]);\n\n  const [dataStocks, setdataStocks] = useState({});\n\n  var listExchangesNames = [];\n  var buy_stocks_info = {};\n  var sell_stocks_info = {};\n  var price_stocks_info = {};\n  var last_price_stocks_info = {};\n\n  var min_price_stocks_info = {};\n  var max_price_stocks_info = {};\n  var data_info = {};\n\n  //ESTADISTICAS\n\n  useEffect(() => {\n    socket.once(\"STOCKS\", (stocks) => {\n      setStock([...stocks]);\n    });\n\n    socket.once(\"EXCHANGES\", (exchangesNames) => {\n      for (var i in exchangesNames) {\n        listExchangesNames.push(exchangesNames[i]);\n      }\n      setExchangesNames([...listExchangesNames]);\n    });\n    //es la compra de una acción\n\n    socket.on(\"BUY\", (buyStocks) => {\n      if (isNaN(buy_stocks_info[buyStocks.ticker])) {\n        buy_stocks_info[buyStocks.ticker] = buyStocks.volume;\n        setBuyStocks(buy_stocks_info);\n      } else {\n        buy_stocks_info[buyStocks.ticker] += buyStocks.volume;\n        setBuyStocks(buy_stocks_info);\n      }\n    });\n    //venta volumen\n    socket.on(\"SELL\", (sellStocks) => {\n      if (isNaN(sell_stocks_info[sellStocks.ticker])) {\n        sell_stocks_info[sellStocks.ticker] = sellStocks.volume;\n        setSellStocks(sell_stocks_info);\n      } else {\n        sell_stocks_info[sellStocks.ticker] += sellStocks.volume;\n        setSellStocks(sell_stocks_info);\n      }\n    });\n\n    //Venta UPDATE\n    socket.on(\"UPDATE\", (priceStocks) => {\n      if (isNaN(price_stocks_info[priceStocks.ticker])) {\n        price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        setPriceStocks(price_stocks_info);\n\n        data_info[priceStocks.ticker] = [];\n        var aux = {};\n\n        aux[\"time\"] = new Date(priceStocks.time).toLocaleString(\"es-CL\");\n        aux[\"value\"] = priceStocks.value;\n        data_info[priceStocks.ticker].push(aux);\n        setdataStocks(data_info);\n\n        last_price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        setlastPriceStocks(last_price_stocks_info);\n\n        min_price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        max_price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        setminPriceStocks(min_price_stocks_info);\n        setmaxPriceStocks(max_price_stocks_info);\n      } else {\n        last_price_stocks_info[priceStocks.ticker] =\n          price_stocks_info[priceStocks.ticker];\n        setlastPriceStocks(last_price_stocks_info);\n\n        price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        setPriceStocks(price_stocks_info);\n\n        var aux = {};\n\n        var d = new Date(priceStocks.time);\n        var t = new Date(d.getTime() + 1000).toLocaleString(\"es-CL\");\n        aux[\"time\"] = t;\n\n        aux[\"value\"] = priceStocks.value;\n        data_info[priceStocks.ticker].push(aux);\n        setdataStocks(data_info);\n\n        var min = min_price_stocks_info[priceStocks.ticker];\n        var max = max_price_stocks_info[priceStocks.ticker];\n        if (priceStocks.value > max) {\n          max_price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        }\n\n        if (priceStocks.value < min) {\n          min_price_stocks_info[priceStocks.ticker] = priceStocks.value;\n        }\n        setminPriceStocks(min_price_stocks_info);\n        setmaxPriceStocks(max_price_stocks_info);\n      }\n    });\n  }, []);\n\n  const [value, setValue] = useState(0); //\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setValue((value) => ++value);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>IIC3103 Jparavich Stock Market</h1>\n        <div>\n          <SwitchExample my_socket={socket} />\n        </div>\n        <center>\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Exchange</th>\n                <th scope=\"col\">Country</th>\n                <th scope=\"col\">Volumen Compra</th>\n                <th scope=\"col\">Volumen Venta</th>\n                <th scope=\"col\">Volumen Total</th>\n                <th scope=\"col\">Cantidad Acciones</th>\n                <th scope=\"col\">Participación de Mercado</th>\n              </tr>\n            </thead>\n            {exchangesNames.map((amu) => (\n              <tr>\n                <td scope=\"row\">{amu.name}</td>\n                <td scope=\"row\">{amu.country}</td>\n\n                <td scope=\"row\">\n                  {find_volume_exchange(\n                    amu.listed_companies,\n                    buyStocks,\n                    stocks\n                  )}{\" \"}\n                </td>\n\n                <td scope=\"row\">\n                  {find_volume_exchange(\n                    amu.listed_companies,\n                    sellStocks,\n                    stocks\n                  )}{\" \"}\n                </td>\n\n                <td scope=\"row\">\n                  {find_volume_exchange(\n                    amu.listed_companies,\n                    buyStocks,\n                    stocks\n                  ) +\n                    find_volume_exchange(\n                      amu.listed_companies,\n                      sellStocks,\n                      stocks\n                    )}{\" \"}\n                </td>\n\n                <td scope=\"row\">{amu.listed_companies.length}</td>\n                <td scope=\"row\">\n                  {find_market_share(\n                    exchangesNames,\n                    amu,\n                    buyStocks,\n                    sellStocks,\n                    stocks\n                  )}\n                </td>\n              </tr>\n            ))}\n          </table>\n        </center>\n        <center>\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Company Stock</th>\n                <th scope=\"col\">Country</th>\n                <th scope=\"col\">Volumen Total Transado</th>\n                <th scope=\"col\">Alto historico</th>\n                <th scope=\"col\">Bajo historico</th>\n                <th scope=\"col\">Ultimo Precio</th>\n                <th scope=\"col\">Variación porcentual (%)</th>\n              </tr>\n            </thead>\n            {stocks.map((block) => (\n              <tr>\n                <td scope=\"row\">{block.company_name}</td>\n                <td scope=\"row\">{block.country}</td>\n                <td scope=\"row\">\n                  {find_buy_volume(block.ticker, buyStocks) +\n                    find_buy_volume(block.ticker, sellStocks)}\n                </td>\n                <td scope=\"row\">\n                  {find_price_2(block.ticker, maxpriceStocks)}{\" \"}\n                </td>\n                <td scope=\"row\">\n                  {find_price_2(block.ticker, minpriceStocks)}{\" \"}\n                </td>\n                <td scope=\"row\">{find_price(block.ticker, priceStocks)} </td>\n                <td scope=\"row\">\n                  {((find_price(block.ticker, priceStocks) -\n                    find_price(block.ticker, lastpriceStocks)) /\n                    find_price(block.ticker, priceStocks)) *\n                    100}{\" \"}\n                </td>\n\n                <td scope=\"row\">\n                  {console.log(dataStocks[block.ticker])}\n                  <LineChart\n                    key={Math.random()}\n                    width={360}\n                    height={320}\n                    data={dataStocks[block.ticker]}\n                    redraw={true}\n                  >\n                    <XAxis\n                      dataKey=\"time\"\n                      label={{ value: \"Time\", position: \"insideBottom\" }}\n                    />\n                    <YAxis\n                      label={{\n                        value: \"$USD\",\n                        angle: -90,\n                        position: \"insideLeft\",\n                      }}\n                    />\n                    <Tooltip />\n                    <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"value\"\n                      stroke=\"#82ca9d\"\n                      activeDot={{ r: 8 }}\n                    />\n                  </LineChart>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </center>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}